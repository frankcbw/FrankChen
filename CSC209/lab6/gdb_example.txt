Script started on Fri 15 Feb 2019 03:04:12 PM EST
]0;chenbinw@wolf:/h/u10/c8/00/chenbinw/csc209/chenbinw/lab6wolf:~/csc209/chenbinw/lab6$ gdb overflow
GNU gdb (Ubuntu 7.11.1-0ubuntu1~16.5) 7.11.1
Copyright (C) 2016 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from overflow...done.
(gdb) list
1       #include <stdio.h>
2       
3       #define SIZE 4
4       #define OVERFLOW 5
5       
6       int main() {
7           int index = 0;
8           int i;
9           int before[SIZE] = {10, 10, 10, 10};
10          int a[SIZE] = {0, 0, 0, 0};
(gdb) break overflow.c [K:36
Breakpoint 1 at 0x40082f: file overflow.c, line 36.
(gdb) break a[Kmain
Breakpoint 2 at 0x40062e: file overflow.c, line 6.
(gdb) break overflow.c:35
Note: breakpoint 1 also set at pc 0x40082f.
Breakpoint 3 at 0x40082f: file overflow.c, line 35.
(gdb) display a
No symbol "a" in current context.
(gdb) display after
No symbol "after" in current context.
(gdb) display
(gdb) run
Starting program: /h/u10/c8/00/chenbinw/csc209/chenbinw/lab6/overflow 

Breakpoint 2, main () at overflow.c:6
6       int main() {
(gdb) next
7           int index = 0;
(gdb) next
9           int before[SIZE] = {10, 10, 10, 10};
(gdb) continue
Continuing.
Address of the variables:
7fffffffea00 -> &after[0]
7fffffffea04 -> &after[1]
7fffffffea08 -> &after[2]
7fffffffea0c -> &after[3]
7fffffffe9f0 -> &a[0]
7fffffffe9f4 -> &a[1]
7fffffffe9f8 -> &a[2]
7fffffffe9fc -> &a[3]
7fffffffe9e0 -> &before[0]
7fffffffe9e4 -> &before[1]
7fffffffe9e8 -> &before[2]
7fffffffe9ec -> &before[3]
7fffffffe9dc -> &i
7fffffffe9d8 -> &index

Initial values:
i = 0
before = {10, 10, 10, 10}
a = {0, 0, 0, 0}
after = {10, 10, 10, 10}


Breakpoint 1, main () at overflow.c:36
36          for (i = 0; i < OVERFLOW; i++) {
(gdb) next
37              a[i] = i * 10;
(gdb) n
38              printf("i = %d\n", i);
(gdb) n
i = 0
39              printf("before = {%d, %d, %d, %d}\n", before[0], before[1], before[2], before[3]);
(gdb) n
before = {10, 10, 10, 10}
40              printf("a = {%d, %d, %d, %d}\n", a[0], a[1], a[2], a[3]);
(gdb) n
a = {0, 0, 0, 0}
41              printf("after = {%d, %d, %d, %d}\n", after[0], after[1], after[2], after[3]);
(gdb) n
after = {10, 10, 10, 10}
36          for (i = 0; i < OVERFLOW; i++) {
(gdb) n
37              a[i] = i * 10;
(gdb) n
38              printf("i = %d\n", i);
(gdb) n
i = 1
39              printf("before = {%d, %d, %d, %d}\n", before[0], before[1], before[2], before[3]);
(gdb) n
before = {10, 10, 10, 10}
40              printf("a = {%d, %d, %d, %d}\n", a[0], a[1], a[2], a[3]);
(gdb) n
a = {0, 10, 0, 0}
41              printf("after = {%d, %d, %d, %d}\n", after[0], after[1], after[2], after[3]);
(gdb) n
after = {10, 10, 10, 10}
36          for (i = 0; i < OVERFLOW; i++) {
(gdb) n
37              a[i] = i * 10;
(gdb) n
38              printf("i = %d\n", i);
(gdb) n
i = 2
39              printf("before = {%d, %d, %d, %d}\n", before[0], before[1], before[2], before[3]);
(gdb) n
before = {10, 10, 10, 10}
40              printf("a = {%d, %d, %d, %d}\n", a[0], a[1], a[2], a[3]);
(gdb) n
a = {0, 10, 20, 0}
41              printf("after = {%d, %d, %d, %d}\n", after[0], after[1], after[2], after[3]);
(gdb) n
after = {10, 10, 10, 10}
36          for (i = 0; i < OVERFLOW; i++) {
(gdb) n
37              a[i] = i * 10;
(gdb) n
38              printf("i = %d\n", i);
(gdb) n
i = 3
39              printf("before = {%d, %d, %d, %d}\n", before[0], before[1], before[2], before[3]);
(gdb) n
before = {10, 10, 10, 10}
40              printf("a = {%d, %d, %d, %d}\n", a[0], a[1], a[2], a[3]);
(gdb) n
a = {0, 10, 20, 30}
41              printf("after = {%d, %d, %d, %d}\n", after[0], after[1], after[2], after[3]);
(gdb) n
after = {10, 10, 10, 10}
36          for (i = 0; i < OVERFLOW; i++) {
(gdb) n
37              a[i] = i * 10;
(gdb) n
38              printf("i = %d\n", i);
(gdb) n
i = 4
39              printf("before = {%d, %d, %d, %d}\n", before[0], before[1], before[2], before[3]);
(gdb) n
before = {10, 10, 10, 10}
40              printf("a = {%d, %d, %d, %d}\n", a[0], a[1], a[2], a[3]);
(gdb) n
a = {0, 10, 20, 30}
41              printf("after = {%d, %d, %d, %d}\n", after[0], after[1], after[2], after[3]);
(gdb) n
after = {40, 10, 10, 10}
36          for (i = 0; i < OVERFLOW; i++) {
(gdb) print &()a)f)t)e)r)[)0)])[C
$1 = (int *) 0x7fffffffea00
(gdb) print &()a)[)4)])[C
$2 = (int *) 0x7fffffffea00
(gdb) exit
Undefined command: "exit".  Try "help".
(gdb) quit
A debugging session is active.

        Inferior 1 [process 4543] will be killed.

Quit anyway? (y or n) y
]0;chenbinw@wolf:/h/u10/c8/00/chenbinw/csc209/chenbinw/lab6wolf:~/csc209/chenbinw/lab6$ exit
exit

Script done on Fri 15 Feb 2019 03:15:42 PM EST
